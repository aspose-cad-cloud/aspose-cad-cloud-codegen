{
  "x-generator": "NSwag v12.3.1.0 (NJsonSchema v9.14.1.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Aspose.CAD Cloud API Reference",
    "version": "3.0"
  },
  "host": "api.aspose.cloud",
  "basePath": "/v3.0",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cad/paper-to-cad": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Convert bitmap image to DXF, DWG, DGN, DWF, DWFX, IFC, STL, STP, STEP, CGM, GLB, GLTF, DWT, IGES, PLT, CF2, OBJ, HPGL, IGS, PCL, FBX, SVG format.",
        "operationId": "PaperToCad",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Output DXF, DWG, DGN, DWF, DWFX, IFC, STL, STP, STEP, CGM, GLB, GLTF, DWT, IGES, PLT, CF2, OBJ, HPGL, IGS, PCL, FBX, SVG file format.",
            "x-nullable": true
          },
          {
            "type": "file",
            "name": "drawing",
            "in": "formData",
            "description": "Form-data file",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "PaperToCad"
      }
    },
    "/cad/Convert": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Convert CAD drawing to DXF, DWG, DGN, DWF, DWFX, IFC, STL, STP, STEP, CGM, GLB, GLTF, DWT, IGES, PLT, CF2, OBJ, HPGL, IGS, PCL, FBX, PDF, SVG format.",
        "operationId": "Convert",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Output DXF, DWG, DGN, DWF, DWFX, IFC, STL, STP, STEP, CGM, GLB, GLTF, DWT, IGES, PLT, CF2, OBJ, HPGL, IGS, PCL, FBX, PDF, SVG, PNG, BMP, DIB, TIFF, TIF, JPEG, GIF, PSD, JPG, JPE, JIF, JFIF, PSD, WEBP, DCM, DICOM, JP2, J2K, JPF, JPM, JPG2, J2C, JPC, JPX, MJ2 , DJVU file format.",
            "x-nullable": true
          },
          {
            "type": "file",
            "name": "drawing",
            "in": "formData",
            "description": "Form-data file",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outputTypeExt",
            "in": "query",
            "description": "For output pdf format: PDF_15, PDFa_1a OR PDFa_1b. Null for another format",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "Convert"
      }
    },
    "/cad/Watermark": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Add watermark to drawing",
        "operationId": "Watermark",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "file",
            "name": "drawing",
            "in": "formData",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "watermarkRgb",
            "in": "formData",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outputTypeExt",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "Watermark"
      }
    },
    "/cad/ExtractText": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Extract Text from CAD drawing to txt file",
        "operationId": "ExtractText",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawing",
            "in": "formData",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "ExtractText"
      }
    },
    "/cad/ExtractMetadata": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Extract Metadata from CAD drawing to txt, xml or json file.",
        "operationId": "ExtractMetadata",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Output TXT, XML or JSON file format.",
            "x-nullable": true
          },
          {
            "type": "file",
            "name": "drawing",
            "in": "formData",
            "description": "Form-data file",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "ExtractMetadata"
      }
    },
    "/cad/Viewer": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Return file for viewer",
        "operationId": "Viewer",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "file",
            "name": "drawing",
            "in": "formData",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "Viewer"
      }
    },
    "/cad/EditMetadata": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Get Metadata info",
        "operationId": "EditMetadata",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawing",
            "in": "formData",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "EditMetadata"
      },
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Save Metadata",
        "operationId": "PutEditMetadata",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawing",
            "in": "formData",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "metadataComponent",
            "in": "formData",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "PutEditMetadata"
      }
    },
    "/cad/{name}/bmp": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to BMP format with export settings specified.",
        "operationId": "PostDrawingBmp",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export BMP options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/BmpOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingBmp"
      }
    },
    "/cad/bmp": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to BMP format. Drawing data is passed as zero-indexed multipart/form-data as well as export BMP options serialized as JSON.\nOrder of drawing data and BMP options could vary.",
        "operationId": "PutDrawingBmp",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/BmpOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "BmpOptionsDTO",
        "x-operationId": "PutDrawingBmp"
      }
    },
    "/cad/{name}/dicom": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to Dicom format with export settings specified.",
        "operationId": "PostDrawingDicom",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export Dicom options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/DicomOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingDicom"
      }
    },
    "/cad/dicom": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to Dicom format. Drawing data is passed as zero-indexed multipart/form-data as well as export Dicom options serialized as JSON.\nOrder of drawing data and Dicom options could vary.",
        "operationId": "PutDrawingDicom",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/DicomOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "DicomOptionsDTO",
        "x-operationId": "PutDrawingDicom"
      }
    },
    "/cad/{name}/gif": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into GIF format with export settings specified.",
        "operationId": "PostDrawingGif",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export GIF options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/GifOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingGif"
      }
    },
    "/cad/gif": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to GIF format. Drawing data is passed as zero-indexed multipart/form-data as well as export GIF options serialized as JSON.\nOrder of drawing data and GIF options could vary.",
        "operationId": "PutDrawingGif",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/GifOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "GifOptionsDTO",
        "x-operationId": "PutDrawingGif"
      }
    },
    "/cad/{name}/jpeg2000": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into JPEG2000 format with export settings specified.",
        "operationId": "PostDrawingJpeg2000",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export JPEG2000 options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/Jpeg2000OptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingJpeg2000"
      }
    },
    "/cad/jpeg2000": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to JPEG2000 format. Drawing data is passed as zero-indexed multipart/form-data as well as export JPEG2000 options serialized as JSON.\nOrder of drawing data and JPEG2000 options could vary.",
        "operationId": "PutDrawingJpeg2000",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/Jpeg2000OptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "Jpeg2000OptionsDTO",
        "x-operationId": "PutDrawingJpeg2000"
      }
    },
    "/cad/{name}/jpeg": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into JPEG format with export settings specified.",
        "operationId": "PostDrawingJpeg",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export JPEG options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/JpegOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingJpeg"
      }
    },
    "/cad/jpeg": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to JPEG format. Drawing data is passed as zero-indexed multipart/form-data as well as export JPEG options serialized as JSON.\nOrder of drawing data and JPEG options could vary.",
        "operationId": "PutDrawingJpeg",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/JpegOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "JpegOptionsDTO",
        "x-operationId": "PutDrawingJpeg"
      }
    },
    "/cad/{name}/png": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into PNG format with export settings specified.",
        "operationId": "PostDrawingPng",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export PNG options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/PngOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingPng"
      }
    },
    "/cad/png": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to PNG format. Drawing data is passed as zero-indexed multipart/form-data as well as export PNG options serialized as JSON.\nOrder of drawing data and PNG options could vary.",
        "operationId": "PutDrawingPng",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/PngOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "PngOptionsDTO",
        "x-operationId": "PutDrawingPng"
      }
    },
    "/cad/{name}/psd": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into PSD format with export settings specified.",
        "operationId": "PostDrawingPsd",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export PSD options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/PsdOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingPsd"
      }
    },
    "/cad/psd": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to PSD format. Drawing data is passed as zero-indexed multipart/form-data as well as export PSD options serialized as JSON.\nOrder of drawing data and PSD options could vary.",
        "operationId": "PutDrawingPsd",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/PsdOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "PsdOptionsDTO",
        "x-operationId": "PutDrawingPsd"
      }
    },
    "/cad/{name}/tiff": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into TIFF format with export settings specified.",
        "operationId": "PostDrawingTiff",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export TIFF options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/TiffOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingTiff"
      }
    },
    "/cad/tiff": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to TIFF format. Drawing data is passed as zero-indexed multipart/form-data as well as export TIFF options serialized as JSON.\nOrder of drawing data and TIFF options could vary.",
        "operationId": "PutDrawingTiff",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/TiffOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "TiffOptionsDTO",
        "x-operationId": "PutDrawingTiff"
      }
    },
    "/cad/{name}/webp": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to Webp format with export settings specified.",
        "operationId": "PostDrawingWebp",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export Webp options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/WebpOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingWebp"
      }
    },
    "/cad/webp": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to Webp format. Drawing data is passed as zero-indexed multipart/form-data as well as export Webp options serialized as JSON.\nOrder of drawing data and Webp options could vary.",
        "operationId": "PutDrawingWebp",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/WebpOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "WebpOptionsDTO",
        "x-operationId": "PutDrawingWebp"
      }
    },
    "/cad/{name}/pdf": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to PDF format with export settings specified.",
        "operationId": "PostDrawingPdf",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export PDF options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/PdfOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingPdf"
      }
    },
    "/cad/pdf": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to PDF format. Drawing data is passed as zero-indexed multipart/form-data as well as export PDF options serialized as JSON.\nOrder of drawing data and PDF options could vary.",
        "operationId": "PutDrawingPdf",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/PdfOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "PdfOptionsDTO",
        "x-operationId": "PutDrawingPdf"
      }
    },
    "/cad/{name}/svg": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to SVG format with export settings specified.",
        "operationId": "PostDrawingSvg",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export SVG options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/SvgOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingSvg"
      }
    },
    "/cad/svg": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to SVG format. Drawing data is passed as zero-indexed multipart/form-data as well as export SVG options serialized as JSON.\nOrder of drawing data and SVG options could vary.",
        "operationId": "PutDrawingSvg",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/SvgOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "SvgOptionsDTO",
        "x-operationId": "PutDrawingSvg"
      }
    },
    "/cad/{name}/wmf": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to WMF format with export settings specified.",
        "operationId": "PostDrawingWmf",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export WMF options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/WmfOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingWmf"
      }
    },
    "/cad/wmf": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to WMF format. Drawing data is passed as zero-indexed multipart/form-data as well as export WMF options serialized as JSON.\nOrder of drawing data and WMF options could vary.",
        "operationId": "PutDrawingWmf",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/WmfOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "WmfOptionsDTO",
        "x-operationId": "PutDrawingWmf"
      }
    },
    "/cad/{name}/cgm": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to CGM format with export settings specified.",
        "operationId": "PostDrawingCgm",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export CGM options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/CgmOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingCgm"
      }
    },
    "/cad/cgm": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to CGM format. Drawing data is passed as zero-indexed multipart/form-data as well as export CGM options serialized as JSON.\nOrder of drawing data and CGM options could vary.",
        "operationId": "PutDrawingCgm",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/CgmOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "CgmOptionsDTO",
        "x-operationId": "PutDrawingCgm"
      }
    },
    "/cad/{name}/dwf": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to Dwf format with export settings specified.",
        "operationId": "PostDrawingDwf",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export Dwf options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/DwfOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingDwf"
      }
    },
    "/cad/dwf": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to Dwf format. Drawing data is passed as zero-indexed multipart/form-data as well as export Dwf options serialized as JSON.\nOrder of drawing data and Dwf options could vary.",
        "operationId": "PutDrawingDwf",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/DwfOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "DwfOptionsDTO",
        "x-operationId": "PutDrawingDwf"
      }
    },
    "/cad/{name}/dxf": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to DXF format with export settings specified.",
        "operationId": "PostDrawingDXF",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export DXF options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/DxfOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingDXF"
      }
    },
    "/cad/dxf": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to DXF format. Drawing data is passed as zero-indexed multipart/form-data as well as export DXF options serialized as JSON.\nOrder of drawing data and DXF options could vary.",
        "operationId": "PutDrawingDXF",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/DxfOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "DxfOptionsDTO",
        "x-operationId": "PutDrawingDXF"
      }
    },
    "/cad/{name}/fbx": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to Fbx format with export settings specified.",
        "operationId": "PostDrawingFbx",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export Fbx options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/FbxOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingFbx"
      }
    },
    "/cad/fbx": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to Fbx format. Drawing data is passed as zero-indexed multipart/form-data as well as export Fbx options serialized as JSON.\nOrder of drawing data and Fbx options could vary.",
        "operationId": "PutDrawingFbx",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/FbxOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "FbxOptionsDTO",
        "x-operationId": "PutDrawingFbx"
      }
    },
    "/cad/{name}/glb": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to GLB format with export settings specified.",
        "operationId": "PostDrawingGlb",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export GLB options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/GlbOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingGlb"
      }
    },
    "/cad/glb": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to GLB format. Drawing data is passed as zero-indexed multipart/form-data as well as export GLB options serialized as JSON.\nOrder of drawing data and GLB options could vary.",
        "operationId": "PutDrawingGlb",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/GlbOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "GlbOptionsDTO",
        "x-operationId": "PutDrawingGlb"
      }
    },
    "/cad/{name}/gltf": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to GLTF format with export settings specified.",
        "operationId": "PostDrawingGltf",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export GLTF options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/GltfOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingGltf"
      }
    },
    "/cad/gltf": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to GLTF format. Drawing data is passed as zero-indexed multipart/form-data as well as export GLTF options serialized as JSON.\nOrder of drawing data and GLTF options could vary.",
        "operationId": "PutDrawingGltf",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/GltfOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "GltfOptionsDTO",
        "x-operationId": "PutDrawingGltf"
      }
    },
    "/cad/{name}/obj": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to Obj format with export settings specified.",
        "operationId": "PostDrawingObj",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export Obj options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/ObjOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingObj"
      }
    },
    "/cad/obj": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to Obj format. Drawing data is passed as zero-indexed multipart/form-data as well as export Obj options serialized as JSON.\nOrder of drawing data and Obj options could vary.",
        "operationId": "PutDrawingObj",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/ObjOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "ObjOptionsDTO",
        "x-operationId": "PutDrawingObj"
      }
    },
    "/cad/{name}/stp": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to STP format with export settings specified.",
        "operationId": "PostDrawingSTP",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export STP options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/StpOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingSTP"
      }
    },
    "/cad/stp": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to Stp format. Drawing data is passed as zero-indexed multipart/form-data as well as export Stp options serialized as JSON.\nOrder of drawing data and Stp options could vary.",
        "operationId": "PutDrawingSTP",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/StpOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "StpOptionsDTO",
        "x-operationId": "PutDrawingSTP"
      }
    },
    "/cad/{name}/3ds": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to 3ds format with export settings specified.",
        "operationId": "PostDrawingThreeDS",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export 3ds options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/ThreeDSOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingThreeDS"
      }
    },
    "/cad/3ds": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to 3ds format. Drawing data is passed as zero-indexed multipart/form-data as well as export 3ds options serialized as JSON.\nOrder of drawing data and 3ds options could vary.",
        "operationId": "PutDrawingThreeDS",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/ThreeDSOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "ThreeDSOptionsDTO",
        "x-operationId": "PutDrawingThreeDS"
      }
    },
    "/cad/{name}/u3d": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to U3d format with export settings specified.",
        "operationId": "PostDrawingU3d",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export U3d options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/U3dOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingU3d"
      }
    },
    "/cad/u3d": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to U3d format. Drawing data is passed as zero-indexed multipart/form-data as well as export U3d options serialized as JSON.\nOrder of drawing data and U3d options could vary.",
        "operationId": "PutDrawingU3d",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/U3dOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "U3dOptionsDTO",
        "x-operationId": "PutDrawingU3d"
      }
    },
    "/cad/{name}/properties": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Retrieves info about an existing drawing.\n            ",
        "operationId": "GetDrawingProperties",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to get properties for.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Information about a drawing.",
            "schema": {
              "$ref": "#/definitions/CadResponse"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "GetDrawingProperties"
      }
    },
    "/cad/properties": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Retrieves info about drawing which is passed as a zero-indexed multipart/form-data content or as raw body stream.",
        "operationId": "PostDrawingProperties",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Information about a drawing.",
            "schema": {
              "$ref": "#/definitions/CadResponse"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "PostDrawingProperties"
      }
    },
    "/cad/{name}/resize": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Resize an existing drawing.",
        "operationId": "GetDrawingResize",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of a drawing.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "newWidth",
            "in": "query",
            "required": true,
            "description": "New width.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "newHeight",
            "in": "query",
            "required": true,
            "description": "New height.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "GetDrawingResize"
      }
    },
    "/cad/resize": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Resize a drawing. Drawing data is passed as a zero-indexed multipart/form-data content or as raw body stream.",
        "operationId": "PostDrawingResize",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "newWidth",
            "in": "query",
            "required": true,
            "description": "New width.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "newHeight",
            "in": "query",
            "required": true,
            "description": "New height.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingResize"
      }
    },
    "/cad/{name}/rotateflip": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Rotate/flip an existing drawing.",
        "operationId": "GetDrawingRotateFlip",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of a drawing.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "rotateFlipType",
            "in": "query",
            "required": true,
            "description": "Rotate/flip operation to apply. Possible values: RotateNoneFlipNone, Rotate90FlipNone, Rotate180FlipNone, Rotate270FlipNone, RotateNoneFlipX, Rotate90FlipX, Rotate180FlipX, Rotate270FlipX, RotateNoneFlipY, Rotate90FlipY, Rotate180FlipY, Rotate270FlipY, RotateNoneFlipXY, Rotate90FlipXY, Rotate180FlipXY, Rotate270FlipXY",
            "x-schema": {
              "$ref": "#/definitions/RotateFlipType"
            },
            "x-nullable": false,
            "enum": [
              "RotateNoneFlipNone",
              "Rotate90FlipNone",
              "Rotate180FlipNone",
              "Rotate270FlipNone",
              "RotateNoneFlipX",
              "Rotate90FlipX",
              "Rotate180FlipX",
              "Rotate270FlipX",
              "RotateNoneFlipY",
              "Rotate90FlipY",
              "Rotate180FlipY",
              "Rotate270FlipY",
              "RotateNoneFlipXY",
              "Rotate90FlipXY",
              "Rotate180FlipXY",
              "Rotate270FlipXY"
            ],
            "$ref": "#/definitions/RotateFlipType"
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "GetDrawingRotateFlip"
      }
    },
    "/cad/rotateflip": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Rotate/flip a drawing. Drawing data is passed as a zero-indexed multipart/form-data content or as raw body stream.",
        "operationId": "PostDrawingRotateFlip",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "rotateFlipType",
            "in": "query",
            "required": true,
            "description": "Rotate/flip operation to apply. Possible values: RotateNoneFlipNone, Rotate90FlipNone, Rotate180FlipNone, Rotate270FlipNone, RotateNoneFlipX, Rotate90FlipX, Rotate180FlipX, Rotate270FlipX, RotateNoneFlipY, Rotate90FlipY, Rotate180FlipY, Rotate270FlipY, RotateNoneFlipXY, Rotate90FlipXY, Rotate180FlipXY, Rotate270FlipXY",
            "x-schema": {
              "$ref": "#/definitions/RotateFlipType"
            },
            "x-nullable": false,
            "enum": [
              "RotateNoneFlipNone",
              "Rotate90FlipNone",
              "Rotate180FlipNone",
              "Rotate270FlipNone",
              "RotateNoneFlipX",
              "Rotate90FlipX",
              "Rotate180FlipX",
              "Rotate270FlipX",
              "RotateNoneFlipY",
              "Rotate90FlipY",
              "Rotate180FlipY",
              "Rotate270FlipY",
              "RotateNoneFlipXY",
              "Rotate90FlipXY",
              "Rotate180FlipXY",
              "Rotate270FlipXY"
            ],
            "$ref": "#/definitions/RotateFlipType"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingRotateFlip"
      }
    },
    "/cad/{name}/saveAs/{outputFormat}": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to another format.",
        "operationId": "GetDrawingSaveAs",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "path",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "GetDrawingSaveAs"
      }
    },
    "/cad/saveAs/{outputFormat}": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export existing drawing to another format. Drawing data is passed as zero-indexed multipart/form-data content or as raw body stream.\n            ",
        "operationId": "PostDrawingSaveAs",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "path",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "401": {
            "description": "Authentication failed."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingSaveAs"
      }
    },
    "/cad/storage/file/{path}": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Download file",
        "operationId": "DownloadFile",
        "produces": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true,
            "description": "File path e.g. '/folder/file.ext'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "storageName",
            "in": "query",
            "description": "Storage name",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "versionId",
            "in": "query",
            "description": "File version ID to download",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "The raw data of the file.",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          },
          "404": {
            "description": "File for given path not found."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "DownloadFile",
        "x-binary-result": true
      },
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Upload file",
        "operationId": "UploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true,
            "description": "Path where to upload including filename and extension e.g. /file.ext or /Folder 1/file.ext\n            If the content is multipart and path does not contains the file name it tries to get them from filename parameter\n            from Content-Disposition header.\n            ",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "storageName",
            "in": "query",
            "description": "Storage name",
            "x-nullable": true
          },
          {
            "type": "file",
            "name": "File",
            "in": "formData",
            "required": true,
            "description": "File to upload"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Empty error list if the upload is successful.",
            "schema": {
              "$ref": "#/definitions/FilesUploadResult"
            }
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "UploadFile"
      },
      "delete": {
        "tags": [
          "Cad"
        ],
        "summary": "Delete file",
        "operationId": "DeleteFile",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true,
            "description": "File path e.g. '/folder/file.ext'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "storageName",
            "in": "query",
            "description": "Storage name",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "versionId",
            "in": "query",
            "description": "File version ID to delete",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns 200 if the delete is successful."
          },
          "401": {
            "description": "Authorization token is invalid or expired"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "DeleteFile"
      }
    },
    "/cad/storage/file/copy/{srcPath}": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Copy file",
        "operationId": "CopyFile",
        "parameters": [
          {
            "type": "string",
            "name": "srcPath",
            "in": "path",
            "required": true,
            "description": "Source file path e.g. '/folder/file.ext'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "destPath",
            "in": "query",
            "required": true,
            "description": "Destination file path",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "srcStorageName",
            "in": "query",
            "description": "Source storage name",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "destStorageName",
            "in": "query",
            "description": "Destination storage name",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "versionId",
            "in": "query",
            "description": "File version ID to copy",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns 200 if the copy is successful."
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "CopyFile"
      }
    },
    "/cad/storage/file/move/{srcPath}": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Move file",
        "operationId": "MoveFile",
        "parameters": [
          {
            "type": "string",
            "name": "srcPath",
            "in": "path",
            "required": true,
            "description": "Source file path e.g. '/src.ext'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "destPath",
            "in": "query",
            "required": true,
            "description": "Destination file path e.g. '/dest.ext'",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "srcStorageName",
            "in": "query",
            "description": "Source storage name",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "destStorageName",
            "in": "query",
            "description": "Destination storage name",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "versionId",
            "in": "query",
            "description": "File version ID to move",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns 200 if the move is successful."
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          },
          "404": {
            "description": "File for given path not found."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "MoveFile"
      }
    },
    "/cad/storage/folder/{path}": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Get all files and folders within a folder",
        "operationId": "GetFilesList",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true,
            "description": "Folder path e.g. '/folder'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "storageName",
            "in": "query",
            "description": "Storage name",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Returns all files and folders contained by the folder.",
            "schema": {
              "$ref": "#/definitions/FilesList"
            }
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          },
          "404": {
            "description": "Can't find folder for given path."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "GetFilesList"
      },
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Create the folder",
        "operationId": "CreateFolder",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true,
            "description": "Folder path to create e.g. 'folder_1/folder_2/'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "storageName",
            "in": "query",
            "description": "Storage name",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns 200 if the create is successful."
          },
          "400": {
            "description": "Storage not found or it is not associated with the application."
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "CreateFolder"
      },
      "delete": {
        "tags": [
          "Cad"
        ],
        "summary": "Delete folder",
        "operationId": "DeleteFolder",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true,
            "description": "Folder path e.g. '/folder'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "storageName",
            "in": "query",
            "description": "Storage name",
            "x-nullable": true
          },
          {
            "type": "boolean",
            "name": "recursive",
            "in": "query",
            "description": "Enable to delete folders, subfolders and files",
            "default": false,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Returns 200 if the delete is successful."
          },
          "401": {
            "description": "Authorization token is invalid or expired"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "DeleteFolder"
      }
    },
    "/cad/storage/folder/copy/{srcPath}": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Copy folder",
        "operationId": "CopyFolder",
        "parameters": [
          {
            "type": "string",
            "name": "srcPath",
            "in": "path",
            "required": true,
            "description": "Source folder path e.g. '/src'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "destPath",
            "in": "query",
            "required": true,
            "description": "Destination folder path e.g. '/dst'",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "srcStorageName",
            "in": "query",
            "description": "Source storage name",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "destStorageName",
            "in": "query",
            "description": "Destination storage name",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns 200 if the copy is successful."
          },
          "401": {
            "description": "Authorization token is invalid or expired"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "CopyFolder"
      }
    },
    "/cad/storage/folder/move/{srcPath}": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Move folder",
        "operationId": "MoveFolder",
        "parameters": [
          {
            "type": "string",
            "name": "srcPath",
            "in": "path",
            "required": true,
            "description": "Folder path to move e.g. '/folder'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "destPath",
            "in": "query",
            "required": true,
            "description": "Destination folder path to move to e.g '/dst'",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "srcStorageName",
            "in": "query",
            "description": "Source storage name",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "destStorageName",
            "in": "query",
            "description": "Destination storage name",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns 200 if the move is successful."
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "MoveFolder"
      }
    },
    "/cad/storage/{storageName}/exist": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Check if storage exists",
        "operationId": "StorageExists",
        "parameters": [
          {
            "type": "string",
            "name": "storageName",
            "in": "path",
            "required": true,
            "description": "Storage name",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Storage exist result.",
            "schema": {
              "$ref": "#/definitions/StorageExist"
            }
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "StorageExists"
      }
    },
    "/cad/storage/exist/{path}": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Check if file or folder exists",
        "operationId": "ObjectExists",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true,
            "description": "File or folder path e.g. '/file.ext' or '/folder'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "storageName",
            "in": "query",
            "description": "Storage name",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "versionId",
            "in": "query",
            "description": "File version ID",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Object exist result.",
            "schema": {
              "$ref": "#/definitions/ObjectExist"
            }
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "ObjectExists"
      }
    },
    "/cad/storage/disc": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Get disc usage",
        "operationId": "GetDiscUsage",
        "parameters": [
          {
            "type": "string",
            "name": "storageName",
            "in": "query",
            "description": "Storage name",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Disc usage.",
            "schema": {
              "$ref": "#/definitions/DiscUsage"
            }
          },
          "400": {
            "description": "Storage not found or it is not associated with an application."
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "GetDiscUsage"
      }
    },
    "/cad/storage/version/{path}": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Get file versions",
        "operationId": "GetFileVersions",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "path",
            "required": true,
            "description": "File path e.g. '/file.ext'",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "storageName",
            "in": "query",
            "description": "Storage name",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "File versions.",
            "schema": {
              "$ref": "#/definitions/FileVersions"
            }
          },
          "401": {
            "description": "Authorization token is invalid or expired."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-operationId": "GetFileVersions"
      }
    }
  },
  "definitions": {
    "BmpOptionsDTO": {
      "type": "object",
      "description": "Export options for BMP format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for BMP format",
          "additionalProperties": false,
          "required": [
            "BitsPerPixel",
            "Compression"
          ],
          "properties": {
            "BitsPerPixel": {
              "type": "integer",
              "description": "Bits per pixel",
              "format": "int32"
            },
            "Compression": {
              "description": "Compression type",
              "enum": [
                "Rgb",
                "Rle8",
                "Rle4",
                "Bitfields",
                "Jpeg",
                "Png",
                "AlphaBitfields",
                "Dxt1"
              ],
              "$ref": "#/definitions/BitmapCompression",
              "x-schema": {
                "$ref": "#/definitions/BitmapCompression"
              }
            }
          }
        }
      ]
    },
    "BitmapCompression": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Rgb",
        "Rle8",
        "Rle4",
        "Bitfields",
        "Jpeg",
        "Png",
        "AlphaBitfields",
        "Dxt1"
      ],
      "enum": [
        "Rgb",
        "Rle8",
        "Rle4",
        "Bitfields",
        "Jpeg",
        "Png",
        "AlphaBitfields",
        "Dxt1"
      ]
    },
    "DrawingOptionsBaseDTO": {
      "type": "object",
      "discriminator": "Type",
      "description": "Image options base class",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Rotation"
      ],
      "properties": {
        "Rotation": {
          "description": "Resulting rotation operation",
          "enum": [
            "RotateNoneFlipNone",
            "Rotate90FlipNone",
            "Rotate180FlipNone",
            "Rotate270FlipNone",
            "RotateNoneFlipX",
            "Rotate90FlipX",
            "Rotate180FlipX",
            "Rotate270FlipX",
            "RotateNoneFlipY",
            "Rotate90FlipY",
            "Rotate180FlipY",
            "Rotate270FlipY",
            "RotateNoneFlipXY",
            "Rotate90FlipXY",
            "Rotate180FlipXY",
            "Rotate270FlipXY"
          ],
          "$ref": "#/definitions/RotateFlipType",
          "x-schema": {
            "$ref": "#/definitions/RotateFlipType"
          }
        },
        "Layers": {
          "type": "array",
          "description": "Layers to export",
          "items": {
            "type": "string"
          }
        },
        "ResolutionSettings": {
          "description": "DPI resolution settings",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResolutionSetting"
        },
        "VectorRasterizationOptions": {
          "description": "Raster options",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/CadRasterizationOptionsDTO"
        }
      }
    },
    "RotateFlipType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "RotateNoneFlipNone",
        "Rotate90FlipNone",
        "Rotate180FlipNone",
        "Rotate270FlipNone",
        "RotateNoneFlipX",
        "Rotate90FlipX",
        "Rotate180FlipX",
        "Rotate270FlipX",
        "RotateNoneFlipY",
        "Rotate90FlipY",
        "Rotate180FlipY",
        "Rotate270FlipY",
        "RotateNoneFlipXY",
        "Rotate90FlipXY",
        "Rotate180FlipXY",
        "Rotate270FlipXY"
      ],
      "enum": [
        "RotateNoneFlipNone",
        "Rotate90FlipNone",
        "Rotate180FlipNone",
        "Rotate270FlipNone",
        "RotateNoneFlipX",
        "Rotate90FlipX",
        "Rotate180FlipX",
        "Rotate270FlipX",
        "RotateNoneFlipY",
        "Rotate90FlipY",
        "Rotate180FlipY",
        "Rotate270FlipY",
        "RotateNoneFlipXY",
        "Rotate90FlipXY",
        "Rotate180FlipXY",
        "Rotate270FlipXY"
      ]
    },
    "ResolutionSetting": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "HorizontalResolution",
        "VerticalResolution"
      ],
      "properties": {
        "HorizontalResolution": {
          "type": "number",
          "format": "double"
        },
        "VerticalResolution": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "CadRasterizationOptionsDTO": {
      "type": "object",
      "description": "Raster export options",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/VectorRasterizationOptionsDTO"
        },
        {
          "type": "object",
          "description": "Raster export options",
          "additionalProperties": false,
          "required": [
            "Zoom",
            "AutomaticLayoutsScaling",
            "DrawType",
            "NoScaling"
          ],
          "properties": {
            "Zoom": {
              "type": "number",
              "description": "Zoom factor",
              "format": "double"
            },
            "PenOptions": {
              "description": "Pen options",
              "allOf": [
                {}
              ],
              "$ref": "#/definitions/PenOptions"
            },
            "AutomaticLayoutsScaling": {
              "type": "boolean",
              "description": "Determines whether layout has to be scaled automatically"
            },
            "Layers": {
              "type": "array",
              "description": "Layers to export",
              "items": {
                "type": "string"
              }
            },
            "Layouts": {
              "type": "array",
              "description": "Layouts to export",
              "items": {
                "type": "string"
              }
            },
            "DrawType": {
              "description": "Drawing mode",
              "enum": [
                "UseDrawColor",
                "UseObjectColor"
              ],
              "$ref": "#/definitions/CadDrawTypeMode",
              "x-schema": {
                "$ref": "#/definitions/CadDrawTypeMode"
              }
            },
            "NoScaling": {
              "type": "boolean",
              "description": "Determines whether scaling has to be turned off"
            }
          }
        }
      ]
    },
    "PenOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "StartCap",
        "EndCap"
      ],
      "properties": {
        "StartCap": {
          "enum": [
            "Flat",
            "Square",
            "Round",
            "Triangle",
            "NoAnchor",
            "SquareAnchor",
            "RoundAnchor",
            "DiamondAnchor",
            "ArrowAnchor",
            "AnchorMask",
            "Custom"
          ],
          "$ref": "#/definitions/LineCap",
          "x-schema": {
            "$ref": "#/definitions/LineCap"
          }
        },
        "EndCap": {
          "enum": [
            "Flat",
            "Square",
            "Round",
            "Triangle",
            "NoAnchor",
            "SquareAnchor",
            "RoundAnchor",
            "DiamondAnchor",
            "ArrowAnchor",
            "AnchorMask",
            "Custom"
          ],
          "$ref": "#/definitions/LineCap",
          "x-schema": {
            "$ref": "#/definitions/LineCap"
          }
        }
      }
    },
    "LineCap": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Flat",
        "Square",
        "Round",
        "Triangle",
        "NoAnchor",
        "SquareAnchor",
        "RoundAnchor",
        "DiamondAnchor",
        "ArrowAnchor",
        "AnchorMask",
        "Custom"
      ],
      "enum": [
        "Flat",
        "Square",
        "Round",
        "Triangle",
        "NoAnchor",
        "SquareAnchor",
        "RoundAnchor",
        "DiamondAnchor",
        "ArrowAnchor",
        "AnchorMask",
        "Custom"
      ]
    },
    "CadDrawTypeMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "UseDrawColor",
        "UseObjectColor"
      ],
      "enum": [
        "UseDrawColor",
        "UseObjectColor"
      ]
    },
    "VectorRasterizationOptionsDTO": {
      "type": "object",
      "discriminator": "Type",
      "description": "Base raster export options class",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "BorderX",
        "BorderY",
        "PageHeight",
        "PageWidth",
        "BackgroundColor",
        "DrawColor",
        "UnitType",
        "ContentAsBitmap"
      ],
      "properties": {
        "BorderX": {
          "type": "number",
          "description": "Gets or sets the border X.",
          "format": "double"
        },
        "BorderY": {
          "type": "number",
          "description": "Gets or sets the border Y.",
          "format": "double"
        },
        "PageHeight": {
          "type": "number",
          "description": "Gets or sets the page height.",
          "format": "double"
        },
        "PageWidth": {
          "type": "number",
          "description": "Gets or sets the page width.",
          "format": "double"
        },
        "BackgroundColor": {
          "description": "Gets or sets a background color.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Color"
        },
        "DrawColor": {
          "description": "Gets or sets a foreground color.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Color"
        },
        "UnitType": {
          "enum": [
            "Kilometer",
            "Meter",
            "Centimenter",
            "Millimeter",
            "Micrometer",
            "Nanometer",
            "Angstrom",
            "Decimeter",
            "Decameter",
            "Hectometer",
            "Gigameter",
            "AstronomicalUnit",
            "LightYear",
            "Parsec",
            "Mile",
            "Yard",
            "Foot",
            "Inch",
            "Mil",
            "MicroInch",
            "Custom",
            "Unitless"
          ],
          "$ref": "#/definitions/UnitType",
          "x-schema": {
            "$ref": "#/definitions/UnitType"
          }
        },
        "ContentAsBitmap": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether content of a drawing is represented as image inside Pdf. Applicable only for CAD to Pdf export. Default is false."
        },
        "GraphicsOptions": {
          "description": "Gets or sets options to render bitmap inside pdf (if ContentAsBitmap is set to true).",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/GraphicsOptions"
        }
      }
    },
    "Color": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "R",
        "G",
        "B",
        "A",
        "IsKnownColor",
        "IsEmpty",
        "IsNamedColor"
      ],
      "properties": {
        "R": {
          "type": "integer",
          "format": "byte"
        },
        "G": {
          "type": "integer",
          "format": "byte"
        },
        "B": {
          "type": "integer",
          "format": "byte"
        },
        "A": {
          "type": "integer",
          "format": "byte"
        },
        "IsKnownColor": {
          "type": "boolean"
        },
        "IsEmpty": {
          "type": "boolean"
        },
        "IsNamedColor": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "UnitType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Kilometer",
        "Meter",
        "Centimenter",
        "Millimeter",
        "Micrometer",
        "Nanometer",
        "Angstrom",
        "Decimeter",
        "Decameter",
        "Hectometer",
        "Gigameter",
        "AstronomicalUnit",
        "LightYear",
        "Parsec",
        "Mile",
        "Yard",
        "Foot",
        "Inch",
        "Mil",
        "MicroInch",
        "Custom",
        "Unitless"
      ],
      "enum": [
        "Kilometer",
        "Meter",
        "Centimenter",
        "Millimeter",
        "Micrometer",
        "Nanometer",
        "Angstrom",
        "Decimeter",
        "Decameter",
        "Hectometer",
        "Gigameter",
        "AstronomicalUnit",
        "LightYear",
        "Parsec",
        "Mile",
        "Yard",
        "Foot",
        "Inch",
        "Mil",
        "MicroInch",
        "Custom",
        "Unitless"
      ]
    },
    "GraphicsOptions": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "TextRenderingHint",
        "SmoothingMode",
        "InterpolationMode"
      ],
      "properties": {
        "TextRenderingHint": {
          "enum": [
            "SystemDefault",
            "SingleBitPerPixelGridFit",
            "SingleBitPerPixel",
            "AntiAliasGridFit",
            "AntiAlias",
            "ClearTypeGridFit"
          ],
          "$ref": "#/definitions/TextRenderingHint",
          "x-schema": {
            "$ref": "#/definitions/TextRenderingHint"
          }
        },
        "SmoothingMode": {
          "enum": [
            "Default",
            "HighSpeed",
            "HighQuality",
            "None",
            "AntiAlias",
            "Invalid"
          ],
          "$ref": "#/definitions/SmoothingMode",
          "x-schema": {
            "$ref": "#/definitions/SmoothingMode"
          }
        },
        "InterpolationMode": {
          "enum": [
            "Default",
            "Low",
            "High",
            "Bilinear",
            "Bicubic",
            "NearestNeighbor",
            "HighQualityBilinear",
            "HighQualityBicubic",
            "Invalid"
          ],
          "$ref": "#/definitions/InterpolationMode",
          "x-schema": {
            "$ref": "#/definitions/InterpolationMode"
          }
        }
      }
    },
    "TextRenderingHint": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "SystemDefault",
        "SingleBitPerPixelGridFit",
        "SingleBitPerPixel",
        "AntiAliasGridFit",
        "AntiAlias",
        "ClearTypeGridFit"
      ],
      "enum": [
        "SystemDefault",
        "SingleBitPerPixelGridFit",
        "SingleBitPerPixel",
        "AntiAliasGridFit",
        "AntiAlias",
        "ClearTypeGridFit"
      ]
    },
    "SmoothingMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Default",
        "HighSpeed",
        "HighQuality",
        "None",
        "AntiAlias",
        "Invalid"
      ],
      "enum": [
        "Default",
        "HighSpeed",
        "HighQuality",
        "None",
        "AntiAlias",
        "Invalid"
      ]
    },
    "InterpolationMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Default",
        "Low",
        "High",
        "Bilinear",
        "Bicubic",
        "NearestNeighbor",
        "HighQualityBilinear",
        "HighQualityBicubic",
        "Invalid"
      ],
      "enum": [
        "Default",
        "Low",
        "High",
        "Bilinear",
        "Bicubic",
        "NearestNeighbor",
        "HighQualityBilinear",
        "HighQualityBicubic",
        "Invalid"
      ]
    },
    "DicomOptionsDTO": {
      "type": "object",
      "description": "Export options for DICOM format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for DICOM format",
          "additionalProperties": false
        }
      ]
    },
    "GifOptionsDTO": {
      "type": "object",
      "description": "Export options for GIF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for GIF format",
          "additionalProperties": false,
          "required": [
            "DoPaletteCorrection",
            "ColorResolution",
            "IsPaletteSorted",
            "PixelAspectRatio",
            "BackgroundColorIndex",
            "HasTrailer",
            "Interlaced"
          ],
          "properties": {
            "DoPaletteCorrection": {
              "type": "boolean",
              "description": "Determines whether to do auto-correction of a palette"
            },
            "ColorResolution": {
              "type": "integer",
              "description": "Color resolution",
              "format": "byte"
            },
            "IsPaletteSorted": {
              "type": "boolean",
              "description": "Determines whether a palette is sorted"
            },
            "PixelAspectRatio": {
              "type": "integer",
              "description": "Pixel aspect ration",
              "format": "byte"
            },
            "BackgroundColorIndex": {
              "type": "integer",
              "description": "Background color index",
              "format": "byte"
            },
            "HasTrailer": {
              "type": "boolean",
              "description": "Determines whether image has to have a trailer"
            },
            "Interlaced": {
              "type": "boolean",
              "description": "Determines whether an image has to be interlaced"
            }
          }
        }
      ]
    },
    "Jpeg2000OptionsDTO": {
      "type": "object",
      "description": "Export options for JPEG2000 format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for JPEG2000 format",
          "additionalProperties": false,
          "required": [
            "Codec"
          ],
          "properties": {
            "Comments": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "Codec": {
              "enum": [
                "J2K",
                "Jp2",
                "Jpt"
              ],
              "$ref": "#/definitions/Jpeg2000Codec",
              "x-schema": {
                "$ref": "#/definitions/Jpeg2000Codec"
              }
            }
          }
        }
      ]
    },
    "Jpeg2000Codec": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "J2K",
        "Jp2",
        "Jpt"
      ],
      "enum": [
        "J2K",
        "Jp2",
        "Jpt"
      ]
    },
    "JpegOptionsDTO": {
      "type": "object",
      "description": "Export options for JPEG format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for JPEG format",
          "additionalProperties": false,
          "required": [
            "CompressionType",
            "ColorType",
            "Quality"
          ],
          "properties": {
            "Comment": {
              "type": "string",
              "description": "Comment to Resulting file"
            },
            "CompressionType": {
              "description": "Compression type",
              "enum": [
                "Baseline",
                "Progressive",
                "Lossless",
                "JpegLs"
              ],
              "$ref": "#/definitions/JpegCompressionMode",
              "x-schema": {
                "$ref": "#/definitions/JpegCompressionMode"
              }
            },
            "ColorType": {
              "description": "Color type",
              "enum": [
                "Grayscale",
                "YCbCr",
                "Cmyk",
                "Ycck",
                "Rgb"
              ],
              "$ref": "#/definitions/JpegCompressionColorMode",
              "x-schema": {
                "$ref": "#/definitions/JpegCompressionColorMode"
              }
            },
            "Quality": {
              "type": "integer",
              "description": "Quality level",
              "format": "int32"
            },
            "RdOptSettings": {
              "description": "Optimizer settings",
              "allOf": [
                {}
              ],
              "$ref": "#/definitions/RdOptimizerSettings"
            }
          }
        }
      ]
    },
    "JpegCompressionMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Baseline",
        "Progressive",
        "Lossless",
        "JpegLs"
      ],
      "enum": [
        "Baseline",
        "Progressive",
        "Lossless",
        "JpegLs"
      ]
    },
    "JpegCompressionColorMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Grayscale",
        "YCbCr",
        "Cmyk",
        "Ycck",
        "Rgb"
      ],
      "enum": [
        "Grayscale",
        "YCbCr",
        "Cmyk",
        "Ycck",
        "Rgb"
      ]
    },
    "RdOptimizerSettings": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "BppScale",
        "BppMax",
        "MaxQ",
        "MinQ",
        "MaxPixelValue",
        "PsnrMax",
        "DiscretizedBppMax"
      ],
      "properties": {
        "BppScale": {
          "type": "integer",
          "format": "int32"
        },
        "BppMax": {
          "type": "number",
          "format": "double"
        },
        "MaxQ": {
          "type": "integer",
          "format": "int32"
        },
        "MinQ": {
          "type": "integer",
          "format": "int32"
        },
        "MaxPixelValue": {
          "type": "integer",
          "format": "int32"
        },
        "PsnrMax": {
          "type": "integer",
          "format": "int32"
        },
        "DiscretizedBppMax": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PngOptionsDTO": {
      "type": "object",
      "description": "Export options for PNG format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for PNG format",
          "additionalProperties": false,
          "required": [
            "ColorType",
            "Progressive",
            "FilterType",
            "CompressionLevel",
            "BitDepth"
          ],
          "properties": {
            "ColorType": {
              "description": "Color type",
              "enum": [
                "Grayscale",
                "Truecolor",
                "IndexedColor",
                "GrayscaleWithAlpha",
                "TruecolorWithAlpha"
              ],
              "$ref": "#/definitions/PngColorType",
              "x-schema": {
                "$ref": "#/definitions/PngColorType"
              }
            },
            "Progressive": {
              "type": "boolean",
              "description": "Determines whether 'progressive' method is used"
            },
            "FilterType": {
              "description": "Filter type",
              "enum": [
                "None",
                "Sub",
                "Up",
                "Avg",
                "Paeth",
                "Adaptive"
              ],
              "$ref": "#/definitions/PngFilterType",
              "x-schema": {
                "$ref": "#/definitions/PngFilterType"
              }
            },
            "CompressionLevel": {
              "type": "integer",
              "description": "Compression level",
              "format": "int32"
            },
            "BitDepth": {
              "type": "integer",
              "description": "Bits depth",
              "format": "byte"
            }
          }
        }
      ]
    },
    "PngColorType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Grayscale",
        "Truecolor",
        "IndexedColor",
        "GrayscaleWithAlpha",
        "TruecolorWithAlpha"
      ],
      "enum": [
        "Grayscale",
        "Truecolor",
        "IndexedColor",
        "GrayscaleWithAlpha",
        "TruecolorWithAlpha"
      ]
    },
    "PngFilterType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "None",
        "Sub",
        "Up",
        "Avg",
        "Paeth",
        "Adaptive"
      ],
      "enum": [
        "None",
        "Sub",
        "Up",
        "Avg",
        "Paeth",
        "Adaptive"
      ]
    },
    "PsdOptionsDTO": {
      "type": "object",
      "description": "Export options for PSD format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for PSD format",
          "additionalProperties": false,
          "required": [
            "Version",
            "CompressionMethod",
            "ColorMode",
            "ChannelBitsCount",
            "ChannelsCount"
          ],
          "properties": {
            "Version": {
              "type": "integer",
              "description": "PSD format version",
              "format": "int32"
            },
            "CompressionMethod": {
              "description": "Compression method",
              "enum": [
                "Raw",
                "RLE",
                "ZipWithoutPrediction",
                "ZipWithPrediction"
              ],
              "$ref": "#/definitions/CompressionMethod",
              "x-schema": {
                "$ref": "#/definitions/CompressionMethod"
              }
            },
            "ColorMode": {
              "description": "Color mode",
              "enum": [
                "Bitmap",
                "Grayscale",
                "Indexed",
                "Rgb",
                "Cmyk",
                "Multichannel",
                "Duotone",
                "Lab"
              ],
              "$ref": "#/definitions/ColorModes",
              "x-schema": {
                "$ref": "#/definitions/ColorModes"
              }
            },
            "ChannelBitsCount": {
              "type": "integer",
              "description": "Bits count per channel"
            },
            "ChannelsCount": {
              "type": "integer",
              "description": "Channels count"
            }
          }
        }
      ]
    },
    "CompressionMethod": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Raw",
        "RLE",
        "ZipWithoutPrediction",
        "ZipWithPrediction"
      ],
      "enum": [
        "Raw",
        "RLE",
        "ZipWithoutPrediction",
        "ZipWithPrediction"
      ]
    },
    "ColorModes": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Bitmap",
        "Grayscale",
        "Indexed",
        "Rgb",
        "Cmyk",
        "Multichannel",
        "Duotone",
        "Lab"
      ],
      "enum": [
        "Bitmap",
        "Grayscale",
        "Indexed",
        "Rgb",
        "Cmyk",
        "Multichannel",
        "Duotone",
        "Lab"
      ]
    },
    "TiffOptionsDTO": {
      "type": "object",
      "description": "Export options for TIFF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for TIFF format",
          "additionalProperties": false,
          "required": [
            "ByteOrder",
            "Compression",
            "ExpectedFormat",
            "Photometric"
          ],
          "properties": {
            "ByteOrder": {
              "description": "Bytes order (little/big-endian notation)",
              "enum": [
                "LittleEndian",
                "BigEndian"
              ],
              "$ref": "#/definitions/TiffByteOrder",
              "x-schema": {
                "$ref": "#/definitions/TiffByteOrder"
              }
            },
            "Compression": {
              "description": "Compression level",
              "enum": [
                "None",
                "CcittRle",
                "CcittFax3",
                "CcittFax4",
                "Lzw",
                "Ojpeg",
                "Jpeg",
                "AdobeDeflate",
                "Next",
                "CcittRleW",
                "Packbits",
                "Thunderscan",
                "It8Ctpad",
                "It8Lw",
                "It8Mp",
                "It8Bl",
                "PixarFilm",
                "PixarLog",
                "Deflate",
                "Dcs",
                "Jbig",
                "Sgilog",
                "Sgilog24",
                "Jp2000"
              ],
              "$ref": "#/definitions/TiffCompressions",
              "x-schema": {
                "$ref": "#/definitions/TiffCompressions"
              }
            },
            "ExpectedFormat": {
              "description": "Expected TIFF sub-format",
              "enum": [
                "Default",
                "TiffLzwBw",
                "TiffLzwRgb",
                "TiffLzwRgba",
                "TiffLzwCmyk",
                "TiffCcittFax3",
                "TiffCcittFax4",
                "TiffDeflateBw",
                "TiffDeflateRgb",
                "TiffDeflateRgba",
                "TiffCcitRle",
                "TiffJpegRgb",
                "TiffJpegYCbCr",
                "TiffNoCompressionBw",
                "TiffNoCompressionRgb",
                "TiffNoCompressionRgba"
              ],
              "$ref": "#/definitions/TiffExpectedFormat",
              "x-schema": {
                "$ref": "#/definitions/TiffExpectedFormat"
              }
            },
            "BitsPerSample": {
              "type": "array",
              "description": "Bits per pixel",
              "items": {
                "type": "integer"
              }
            },
            "Photometric": {
              "description": "Photometric options",
              "enum": [
                "MinIsWhite",
                "MinIsBlack",
                "Rgb",
                "Palette",
                "Mask",
                "Separated",
                "Ycbcr",
                "Cielab",
                "Icclab",
                "Itulab",
                "Logl",
                "Logluv"
              ],
              "$ref": "#/definitions/TiffPhotometrics",
              "x-schema": {
                "$ref": "#/definitions/TiffPhotometrics"
              }
            }
          }
        }
      ]
    },
    "TiffByteOrder": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "LittleEndian",
        "BigEndian"
      ],
      "enum": [
        "LittleEndian",
        "BigEndian"
      ]
    },
    "TiffCompressions": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "None",
        "CcittRle",
        "CcittFax3",
        "CcittFax4",
        "Lzw",
        "Ojpeg",
        "Jpeg",
        "AdobeDeflate",
        "Next",
        "CcittRleW",
        "Packbits",
        "Thunderscan",
        "It8Ctpad",
        "It8Lw",
        "It8Mp",
        "It8Bl",
        "PixarFilm",
        "PixarLog",
        "Deflate",
        "Dcs",
        "Jbig",
        "Sgilog",
        "Sgilog24",
        "Jp2000"
      ],
      "enum": [
        "None",
        "CcittRle",
        "CcittFax3",
        "CcittFax4",
        "Lzw",
        "Ojpeg",
        "Jpeg",
        "AdobeDeflate",
        "Next",
        "CcittRleW",
        "Packbits",
        "Thunderscan",
        "It8Ctpad",
        "It8Lw",
        "It8Mp",
        "It8Bl",
        "PixarFilm",
        "PixarLog",
        "Deflate",
        "Dcs",
        "Jbig",
        "Sgilog",
        "Sgilog24",
        "Jp2000"
      ]
    },
    "TiffExpectedFormat": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Default",
        "TiffLzwBw",
        "TiffLzwRgb",
        "TiffLzwRgba",
        "TiffLzwCmyk",
        "TiffCcittFax3",
        "TiffCcittFax4",
        "TiffDeflateBw",
        "TiffDeflateRgb",
        "TiffDeflateRgba",
        "TiffCcitRle",
        "TiffJpegRgb",
        "TiffJpegYCbCr",
        "TiffNoCompressionBw",
        "TiffNoCompressionRgb",
        "TiffNoCompressionRgba"
      ],
      "enum": [
        "Default",
        "TiffLzwBw",
        "TiffLzwRgb",
        "TiffLzwRgba",
        "TiffLzwCmyk",
        "TiffCcittFax3",
        "TiffCcittFax4",
        "TiffDeflateBw",
        "TiffDeflateRgb",
        "TiffDeflateRgba",
        "TiffCcitRle",
        "TiffJpegRgb",
        "TiffJpegYCbCr",
        "TiffNoCompressionBw",
        "TiffNoCompressionRgb",
        "TiffNoCompressionRgba"
      ]
    },
    "TiffPhotometrics": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "MinIsWhite",
        "MinIsBlack",
        "Rgb",
        "Palette",
        "Mask",
        "Separated",
        "Ycbcr",
        "Cielab",
        "Icclab",
        "Itulab",
        "Logl",
        "Logluv"
      ],
      "enum": [
        "MinIsWhite",
        "MinIsBlack",
        "Rgb",
        "Palette",
        "Mask",
        "Separated",
        "Ycbcr",
        "Cielab",
        "Icclab",
        "Itulab",
        "Logl",
        "Logluv"
      ]
    },
    "WebpOptionsDTO": {
      "type": "object",
      "description": "Export options for WEBP format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for WEBP format",
          "additionalProperties": false
        }
      ]
    },
    "PdfOptionsDTO": {
      "type": "object",
      "description": "Export options for PDF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for PDF format",
          "additionalProperties": false,
          "properties": {
            "PdfDocumentInfo": {
              "description": "Document metadata",
              "allOf": [
                {}
              ],
              "$ref": "#/definitions/PdfDocumentInfo"
            },
            "CorePdfOptions": {
              "description": "Core PDF rendering options",
              "allOf": [
                {}
              ],
              "$ref": "#/definitions/PdfDocumentOptionsDTO"
            }
          }
        }
      ]
    },
    "PdfDocumentInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Keywords": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Author": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      }
    },
    "PdfDocumentOptionsDTO": {
      "type": "object",
      "description": "Export document options.",
      "additionalProperties": false,
      "required": [
        "Compliance"
      ],
      "properties": {
        "Compliance": {
          "enum": [
            "Pdf15",
            "PdfA1a",
            "PdfA1b"
          ],
          "$ref": "#/definitions/PdfCompliance",
          "x-schema": {
            "$ref": "#/definitions/PdfCompliance"
          }
        },
        "DigitalSignatureDetails": {
          "description": "Gets or sets a digital signature details. If not set, then no signing will be performed.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/PdfDigitalSignatureDetailsCoreDTO"
        }
      }
    },
    "PdfCompliance": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Pdf15",
        "PdfA1a",
        "PdfA1b"
      ],
      "enum": [
        "Pdf15",
        "PdfA1a",
        "PdfA1b"
      ]
    },
    "PdfDigitalSignatureDetailsCoreDTO": {
      "type": "object",
      "description": "Contains details for a PDF digital signature.",
      "additionalProperties": false,
      "required": [
        "SignatureDate",
        "HashAlgorithm"
      ],
      "properties": {
        "Certificate": {
          "type": "string",
          "description": "A signing certificate in base64 format that contains a certificate of type X509Certificate2."
        },
        "Reason": {
          "type": "string",
          "description": "The reason of signing."
        },
        "Location": {
          "type": "string",
          "description": "Location of signing."
        },
        "SignatureDate": {
          "type": "string",
          "description": "Date of signing.",
          "format": "date-time"
        },
        "HashAlgorithm": {
          "description": "Hash algorithm.",
          "enum": [
            "Sha1",
            "Sha256",
            "Sha384",
            "Sha512",
            "Md5"
          ],
          "$ref": "#/definitions/PdfDigitalSignatureHashAlgorithmCore",
          "x-schema": {
            "$ref": "#/definitions/PdfDigitalSignatureHashAlgorithmCore"
          }
        }
      }
    },
    "PdfDigitalSignatureHashAlgorithmCore": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Sha1",
        "Sha256",
        "Sha384",
        "Sha512",
        "Md5"
      ],
      "enum": [
        "Sha1",
        "Sha256",
        "Sha384",
        "Sha512",
        "Md5"
      ]
    },
    "SvgOptionsDTO": {
      "type": "object",
      "description": "Export options for SVG format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for SVG format",
          "additionalProperties": false,
          "required": [
            "ColorType",
            "TextAsShapes"
          ],
          "properties": {
            "ColorType": {
              "description": "Color type",
              "enum": [
                "Grayscale",
                "YCbCr",
                "Cmyk",
                "Ycck",
                "Rgb"
              ],
              "$ref": "#/definitions/SvgColorMode",
              "x-schema": {
                "$ref": "#/definitions/SvgColorMode"
              }
            },
            "TextAsShapes": {
              "type": "boolean",
              "description": "Render text as shapes"
            }
          }
        }
      ]
    },
    "SvgColorMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Grayscale",
        "YCbCr",
        "Cmyk",
        "Ycck",
        "Rgb"
      ],
      "enum": [
        "Grayscale",
        "YCbCr",
        "Cmyk",
        "Ycck",
        "Rgb"
      ]
    },
    "WmfOptionsDTO": {
      "type": "object",
      "description": "Export options for WMF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for WMF format",
          "additionalProperties": false,
          "required": [
            "BitsPerPixel"
          ],
          "properties": {
            "BitsPerPixel": {
              "type": "integer",
              "description": "Bits per pixel for Resulting file",
              "format": "int32"
            }
          }
        }
      ]
    },
    "CgmOptionsDTO": {
      "type": "object",
      "description": "Export options for CGM format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for CGM format",
          "additionalProperties": false
        }
      ]
    },
    "DwfOptionsDTO": {
      "type": "object",
      "description": "Export options for DWF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for DWF format",
          "additionalProperties": false
        }
      ]
    },
    "DxfOptionsDTO": {
      "type": "object",
      "description": "Export options for DXF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for DXF format",
          "additionalProperties": false
        }
      ]
    },
    "FbxOptionsDTO": {
      "type": "object",
      "description": "Export options for FBX format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for FBX format",
          "additionalProperties": false
        }
      ]
    },
    "GlbOptionsDTO": {
      "type": "object",
      "description": "Export options for GLB format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for GLB format",
          "additionalProperties": false
        }
      ]
    },
    "GltfOptionsDTO": {
      "type": "object",
      "description": "Export options for GLTF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for GLTF format",
          "additionalProperties": false
        }
      ]
    },
    "ObjOptionsDTO": {
      "type": "object",
      "description": "Export options for FBX format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for FBX format",
          "additionalProperties": false
        }
      ]
    },
    "StpOptionsDTO": {
      "type": "object",
      "description": "Export options for STP format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for STP format",
          "additionalProperties": false
        }
      ]
    },
    "ThreeDSOptionsDTO": {
      "type": "object",
      "description": "Export options for 3DS format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for 3DS format",
          "additionalProperties": false
        }
      ]
    },
    "U3dOptionsDTO": {
      "type": "object",
      "description": "Export options for U3D format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for U3D format",
          "additionalProperties": false
        }
      ]
    },
    "CadResponse": {
      "type": "object",
      "description": "Represents information about a drawing.",
      "additionalProperties": false,
      "required": [
        "Height",
        "Width"
      ],
      "properties": {
        "Height": {
          "type": "integer",
          "description": "Gets or sets the height of a drawing.",
          "format": "int32"
        },
        "Width": {
          "type": "integer",
          "description": "Gets or sets the width of a drawing.",
          "format": "int32"
        },
        "DwgProperties": {
          "description": "Gets or sets the DWG properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DwgProperties"
        },
        "DxfProperties": {
          "description": "Gets or sets the DXF properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DxfProperties"
        },
        "DwtProperties": {
          "description": "Gets or sets the DWT properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DwgProperties"
        },
        "DgnProperties": {
          "description": "Gets or sets the DGN properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DgnProperties"
        },
        "IfcProperties": {
          "description": "Gets or sets the IFC properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/IfcProperties"
        },
        "IgsProperties": {
          "description": "Gets or sets the IGS properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/IgsProperties"
        },
        "StlProperties": {
          "description": "Gets or sets the STL properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/StlProperties"
        },
        "DwfProperties": {
          "description": "Gets or sets the DWF properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DwfProperties"
        },
        "Cf2Properties": {
          "description": "Gets or sets the Cf2 properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Cf2Properties"
        },
        "FbxProperties": {
          "description": "Gets or sets the Cf2 properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/FbxProperties"
        },
        "ObjProperties": {
          "description": "Gets or sets the FBX properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ObjProperties"
        },
        "PltProperties": {
          "description": "Gets or sets the Cf2 properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/PltProperties"
        },
        "StpProperties": {
          "description": "Gets or sets the STP properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/StpProperties"
        }
      }
    },
    "DwgProperties": {
      "type": "object",
      "description": "Represents information about DWG drawing.",
      "additionalProperties": false
    },
    "DxfProperties": {
      "type": "object",
      "description": "Represents information about DXF drawing.",
      "additionalProperties": false
    },
    "DgnProperties": {
      "type": "object",
      "description": "Represents information about DGN drawing.",
      "additionalProperties": false
    },
    "IfcProperties": {
      "type": "object",
      "description": "Represents information about IFC drawing.",
      "additionalProperties": false
    },
    "IgsProperties": {
      "type": "object",
      "description": "Represents information about IGS drawing.",
      "additionalProperties": false
    },
    "StlProperties": {
      "type": "object",
      "description": "Represents information about STL drawing.",
      "additionalProperties": false
    },
    "DwfProperties": {
      "type": "object",
      "description": "Represents information about DWF drawing.",
      "additionalProperties": false
    },
    "Cf2Properties": {
      "type": "object",
      "description": "Represents information about CF2 drawing.",
      "additionalProperties": false
    },
    "FbxProperties": {
      "type": "object",
      "description": "Represents information about FBX drawing.",
      "additionalProperties": false
    },
    "ObjProperties": {
      "type": "object",
      "description": "Represents information about OBJ drawing.",
      "additionalProperties": false
    },
    "PltProperties": {
      "type": "object",
      "description": "Represents information about PLT drawing.",
      "additionalProperties": false
    },
    "StpProperties": {
      "type": "object",
      "description": "Represents information about STP drawing.",
      "additionalProperties": false
    },
    "FilesUploadResult": {
      "type": "object",
      "description": "File upload result",
      "additionalProperties": false,
      "properties": {
        "Uploaded": {
          "type": "array",
          "description": "List of uploaded file names",
          "items": {
            "type": "string"
          }
        },
        "Errors": {
          "type": "array",
          "description": "List of errors.",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "Error",
      "additionalProperties": false,
      "properties": {
        "Code": {
          "type": "string",
          "description": "Code\n            "
        },
        "Message": {
          "type": "string",
          "description": "Message\n            "
        },
        "Description": {
          "type": "string",
          "description": "Description\n            "
        },
        "InnerError": {
          "description": "Inner Error\n            ",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "ErrorDetails": {
      "type": "object",
      "description": "The error details",
      "additionalProperties": false,
      "required": [
        "Date"
      ],
      "properties": {
        "RequestId": {
          "type": "string",
          "description": "The request id"
        },
        "Date": {
          "type": "string",
          "description": "Date",
          "format": "date-time"
        }
      }
    },
    "FilesList": {
      "type": "object",
      "description": "Files list",
      "additionalProperties": false,
      "properties": {
        "Value": {
          "type": "array",
          "description": "Files and folders contained by folder StorageFile.",
          "items": {
            "$ref": "#/definitions/StorageFile"
          }
        }
      }
    },
    "StorageFile": {
      "type": "object",
      "discriminator": "Type",
      "description": "File or folder information",
      "additionalProperties": false,
      "required": [
        "IsFolder",
        "Size"
      ],
      "properties": {
        "Name": {
          "type": "string",
          "description": "File or folder name."
        },
        "IsFolder": {
          "type": "boolean",
          "description": "True if it is a folder."
        },
        "ModifiedDate": {
          "type": "string",
          "description": "File or folder last modified DateTime.",
          "format": "date-time"
        },
        "Size": {
          "type": "integer",
          "description": "File or folder size.",
          "format": "int64"
        },
        "Path": {
          "type": "string",
          "description": "File or folder path."
        }
      }
    },
    "StorageExist": {
      "type": "object",
      "description": "Storage exists",
      "additionalProperties": false,
      "required": [
        "Exists"
      ],
      "properties": {
        "Exists": {
          "type": "boolean",
          "description": "Shows that the storage exists.\n            "
        }
      }
    },
    "ObjectExist": {
      "type": "object",
      "description": "Object exists",
      "additionalProperties": false,
      "required": [
        "Exists",
        "IsFolder"
      ],
      "properties": {
        "Exists": {
          "type": "boolean",
          "description": "Indicates that the file or folder exists."
        },
        "IsFolder": {
          "type": "boolean",
          "description": "True if it is a folder, false if it is a file."
        }
      }
    },
    "DiscUsage": {
      "type": "object",
      "description": "Class for disc space information.",
      "additionalProperties": false,
      "required": [
        "UsedSize",
        "TotalSize"
      ],
      "properties": {
        "UsedSize": {
          "type": "integer",
          "description": "Application used disc space.",
          "format": "int64"
        },
        "TotalSize": {
          "type": "integer",
          "description": "Total disc space.",
          "format": "int64"
        }
      }
    },
    "FileVersions": {
      "type": "object",
      "description": "File versions FileVersion.",
      "additionalProperties": false,
      "properties": {
        "Value": {
          "type": "array",
          "description": "File versions FileVersion.",
          "items": {
            "$ref": "#/definitions/FileVersion"
          }
        }
      }
    },
    "FileVersion": {
      "type": "object",
      "description": "File Version",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/StorageFile"
        },
        {
          "type": "object",
          "description": "File Version",
          "additionalProperties": false,
          "required": [
            "IsLatest"
          ],
          "properties": {
            "VersionId": {
              "type": "string",
              "description": "File Version ID."
            },
            "IsLatest": {
              "type": "boolean",
              "description": "Specifies whether the file is (true) or is not (false) the latest version of an file."
            }
          }
        }
      ]
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Type into: <b>Bearer &lt;your JWT token&gt;</b>. Obtain a JWT token from POST https://api.aspose.cloud/connect/token",
      "name": "Authorization",
      "in": "header"
    },
    "OAuth2": {
      "type": "oauth2",
      "description": "Use your client_id/client_secret from https://dashboard.aspose.cloud site",
      "name": "OAuth2",
      "flow": "application",
      "tokenUrl": "https://api.aspose.cloud/connect/token",
      "scopes": {
        "api.products": "access to Aspose.CAD API"
      }
    }
  }
}