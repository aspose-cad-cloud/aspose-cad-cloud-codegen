{
  "x-generator": "NSwag v12.0.14.0 (NJsonSchema v9.13.18.0 (Newtonsoft.Json v12.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Aspose.CAD Cloud API Reference",
    "version": "3.0"
  },
  "host": "api-qa.aspose.cloud",
  "basePath": "/v3.0",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cad/{name}/bmp": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to BMP format with export settings specified.",
        "operationId": "PostDrawingBmp",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export BMP options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/BmpOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingBmp"
      }
    },
    "/cad/bmp": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to BMP format. Drawing data is passed as zero-indexed multipart/form-data as well as export BMP options serialized as JSON.\nOrder of drawing data and BMP options could vary.",
        "operationId": "PutDrawingBmp",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/BmpOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "BmpOptionsDTO",
        "x-operationId": "PutDrawingBmp"
      }
    },
    "/cad/{name}/gif": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into GIF format with export settings specified.",
        "operationId": "PostDrawingGif",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export GIF options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/GifOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingGif"
      }
    },
    "/cad/gif": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to GIF format. Drawing data is passed as zero-indexed multipart/form-data as well as export GIF options serialized as JSON.\nOrder of drawing data and GIF options could vary.",
        "operationId": "PutDrawingGif",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/GifOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "GifOptionsDTO",
        "x-operationId": "PutDrawingGif"
      }
    },
    "/cad/{name}/jpeg2000": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into JPEG2000 format with export settings specified.",
        "operationId": "PostDrawingJpeg2000",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export JPEG2000 options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/Jpeg2000OptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingJpeg2000"
      }
    },
    "/cad/jpeg2000": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to JPEG2000 format. Drawing data is passed as zero-indexed multipart/form-data as well as export JPEG2000 options serialized as JSON.\nOrder of drawing data and JPEG2000 options could vary.",
        "operationId": "PutDrawingJpeg2000",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/Jpeg2000OptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "Jpeg2000OptionsDTO",
        "x-operationId": "PutDrawingJpeg2000"
      }
    },
    "/cad/{name}/jpeg": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into JPEG format with export settings specified.",
        "operationId": "PostDrawingJpeg",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export JPEG options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/JpegOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingJpeg"
      }
    },
    "/cad/jpeg": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to JPEG format. Drawing data is passed as zero-indexed multipart/form-data as well as export JPEG options serialized as JSON.\nOrder of drawing data and JPEG options could vary.",
        "operationId": "PutDrawingJpeg",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/JpegOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "JpegOptionsDTO",
        "x-operationId": "PutDrawingJpeg"
      }
    },
    "/cad/{name}/png": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into PNG format with export settings specified.",
        "operationId": "PostDrawingPng",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export PNG options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/PngOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingPng"
      }
    },
    "/cad/png": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to PNG format. Drawing data is passed as zero-indexed multipart/form-data as well as export PNG options serialized as JSON.\nOrder of drawing data and PNG options could vary.",
        "operationId": "PutDrawingPng",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/PngOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "PngOptionsDTO",
        "x-operationId": "PutDrawingPng"
      }
    },
    "/cad/{name}/psd": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into PSD format with export settings specified.",
        "operationId": "PostDrawingPsd",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export PSD options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/PsdOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingPsd"
      }
    },
    "/cad/psd": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to PSD format. Drawing data is passed as zero-indexed multipart/form-data as well as export PSD options serialized as JSON.\nOrder of drawing data and PSD options could vary.",
        "operationId": "PutDrawingPsd",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/PsdOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "PsdOptionsDTO",
        "x-operationId": "PutDrawingPsd"
      }
    },
    "/cad/{name}/tiff": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing into TIFF format with export settings specified.",
        "operationId": "PostDrawingTiff",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export TIFF options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/TiffOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingTiff"
      }
    },
    "/cad/tiff": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to TIFF format. Drawing data is passed as zero-indexed multipart/form-data as well as export TIFF options serialized as JSON.\nOrder of drawing data and TIFF options could vary.",
        "operationId": "PutDrawingTiff",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/TiffOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "TiffOptionsDTO",
        "x-operationId": "PutDrawingTiff"
      }
    },
    "/cad/{name}/pdf": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to PDF format with export settings specified.",
        "operationId": "PostDrawingPdf",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export PDF options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/PdfOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingPdf"
      }
    },
    "/cad/pdf": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to PDF format. Drawing data is passed as zero-indexed multipart/form-data as well as export PDF options serialized as JSON.\nOrder of drawing data and PDF options could vary.",
        "operationId": "PutDrawingPdf",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/PdfOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "PdfOptionsDTO",
        "x-operationId": "PutDrawingPdf"
      }
    },
    "/cad/{name}/svg": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to SVG format with export settings specified.",
        "operationId": "PostDrawingSvg",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export SVG options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/SvgOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingSvg"
      }
    },
    "/cad/svg": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to SVG format. Drawing data is passed as zero-indexed multipart/form-data as well as export SVG options serialized as JSON.\nOrder of drawing data and SVG options could vary.",
        "operationId": "PutDrawingSvg",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/SvgOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "SvgOptionsDTO",
        "x-operationId": "PutDrawingSvg"
      }
    },
    "/cad/{name}/wmf": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to WMF format with export settings specified.",
        "operationId": "PostDrawingWmf",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Export WMF options passed as a JSON on a request body.",
            "schema": {
              "$ref": "#/definitions/WmfOptionsDTO"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingWmf"
      }
    },
    "/cad/wmf": {
      "put": {
        "tags": [
          "Cad"
        ],
        "summary": "Export drawing to WMF format. Drawing data is passed as zero-indexed multipart/form-data as well as export WMF options serialized as JSON.\nOrder of drawing data and WMF options could vary.",
        "operationId": "PutDrawingWmf",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "exportOptions",
            "in": "formData",
            "description": "JSON-serialized export options passed as zero-indexed multipart/form-data. Follow #/definitions/WmfOptionsDTO model definition."
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-options-input": "WmfOptionsDTO",
        "x-operationId": "PutDrawingWmf"
      }
    },
    "/cad/{name}/properties": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Retrieves info about an existing drawing.\n            ",
        "operationId": "GetDrawingProperties",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to get properties for.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Information about a drawing.",
            "schema": {
              "$ref": "#/definitions/CadResponse"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-operationId": "GetDrawingProperties"
      }
    },
    "/cad/properties": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Retrieves info about drawing which is passed as a zero-indexed multipart/form-data content or as raw body stream.",
        "operationId": "PostDrawingProperties",
        "consumes": [
          "multipart/form-data",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Information about a drawing.",
            "schema": {
              "$ref": "#/definitions/CadResponse"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-operationId": "PostDrawingProperties"
      }
    },
    "/cad/{name}/resize": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Resize an existing drawing.",
        "operationId": "GetDrawingResize",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of a drawing.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "newWidth",
            "in": "query",
            "required": true,
            "description": "New width.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "newHeight",
            "in": "query",
            "required": true,
            "description": "New height.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "GetDrawingResize"
      }
    },
    "/cad/resize": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Resize a drawing. Drawing data is passed as a zero-indexed multipart/form-data content or as raw body stream.",
        "operationId": "PostDrawingResize",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": true
          },
          {
            "type": "integer",
            "name": "newWidth",
            "in": "query",
            "required": true,
            "description": "New width.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "newHeight",
            "in": "query",
            "required": true,
            "description": "New height.",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingResize"
      }
    },
    "/cad/{name}/rotateflip": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Rotate/flip an existing drawing.",
        "operationId": "GetDrawingRotateFlip",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of a drawing.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "rotateFlipType",
            "in": "query",
            "required": true,
            "description": "Rotate/flip operation to apply. Possible values: RotateNoneFlipNone, Rotate90FlipNone, Rotate180FlipNone, Rotate270FlipNone, RotateNoneFlipX, Rotate90FlipX, Rotate180FlipX, Rotate270FlipX, RotateNoneFlipY, Rotate90FlipY, Rotate180FlipY, Rotate270FlipY, RotateNoneFlipXY, Rotate90FlipXY, Rotate180FlipXY, Rotate270FlipXY",
            "x-schema": {},
            "x-nullable": false,
            "enum": [
              "RotateNoneFlipNone",
              "Rotate90FlipNone",
              "Rotate180FlipNone",
              "Rotate270FlipNone",
              "RotateNoneFlipX",
              "Rotate90FlipX",
              "Rotate180FlipX",
              "Rotate270FlipX",
              "RotateNoneFlipY",
              "Rotate90FlipY",
              "Rotate180FlipY",
              "Rotate270FlipY",
              "RotateNoneFlipXY",
              "Rotate90FlipXY",
              "Rotate180FlipXY",
              "Rotate270FlipXY"
            ]
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "GetDrawingRotateFlip"
      }
    },
    "/cad/rotateflip": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Rotate/flip a drawing. Drawing data is passed as a zero-indexed multipart/form-data content or as raw body stream.",
        "operationId": "PostDrawingRotateFlip",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "query",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "rotateFlipType",
            "in": "query",
            "required": true,
            "description": "Rotate/flip operation to apply. Possible values: RotateNoneFlipNone, Rotate90FlipNone, Rotate180FlipNone, Rotate270FlipNone, RotateNoneFlipX, Rotate90FlipX, Rotate180FlipX, Rotate270FlipX, RotateNoneFlipY, Rotate90FlipY, Rotate180FlipY, Rotate270FlipY, RotateNoneFlipXY, Rotate90FlipXY, Rotate180FlipXY, Rotate270FlipXY",
            "x-schema": {},
            "x-nullable": false,
            "enum": [
              "RotateNoneFlipNone",
              "Rotate90FlipNone",
              "Rotate180FlipNone",
              "Rotate270FlipNone",
              "RotateNoneFlipX",
              "Rotate90FlipX",
              "Rotate180FlipX",
              "Rotate270FlipX",
              "RotateNoneFlipY",
              "Rotate90FlipY",
              "Rotate180FlipY",
              "Rotate270FlipY",
              "RotateNoneFlipXY",
              "Rotate90FlipXY",
              "Rotate180FlipXY",
              "Rotate270FlipXY"
            ]
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingRotateFlip"
      }
    },
    "/cad/{name}/saveAs/{outputFormat}": {
      "get": {
        "tags": [
          "Cad"
        ],
        "summary": "Export an existing drawing to another format.",
        "operationId": "GetDrawingSaveAs",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Filename of an input drawing on a storage.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "path",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "folder",
            "in": "query",
            "description": "Folder with a drawing to process.",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          },
          "404": {
            "description": "Input file doesn't exist at provided path."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "GetDrawingSaveAs"
      }
    },
    "/cad/saveAs/{outputFormat}": {
      "post": {
        "tags": [
          "Cad"
        ],
        "summary": "Export existing drawing to another format. Drawing data is passed as zero-indexed multipart/form-data content or as raw body stream.\n            ",
        "operationId": "PostDrawingSaveAs",
        "consumes": [
          "application/octet-stream",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "type": "file",
            "name": "drawingData",
            "in": "formData",
            "required": true,
            "description": "Input drawing"
          },
          {
            "type": "string",
            "name": "outputFormat",
            "in": "path",
            "required": true,
            "description": "Resulting file format.",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "outPath",
            "in": "query",
            "description": "Path to updated file (if this is empty, response contains streamed file).",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "storage",
            "in": "query",
            "description": "Your Aspose Cloud Storage name.",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Data stream (if output path is not set).",
            "schema": {
              "type": "file"
            }
          },
          "401": {
            "description": "Authentication failed."
          },
          "400": {
            "description": "Invalid request parameters or input data."
          },
          "501": {
            "description": "The specific operation is not yet supported - please, contact us if you require it."
          },
          "500": {
            "description": "Either current server is busy or internal error occured."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "x-binary-result": "true",
        "x-operationId": "PostDrawingSaveAs"
      }
    }
  },
  "definitions": {
    "BmpOptionsDTO": {
      "type": "object",
      "description": "Export options for BMP format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for BMP format",
          "additionalProperties": false,
          "required": [
            "BitsPerPixel",
            "Compression"
          ],
          "properties": {
            "BitsPerPixel": {
              "type": "integer",
              "description": "Bits per pixel",
              "format": "int32"
            },
            "Compression": {
              "description": "Compression type",
              "enum": [
                "Rgb",
                "Rle8",
                "Rle4",
                "Bitfields",
                "Jpeg",
                "Png",
                "AlphaBitfields"
              ],
              "allOf": [
                {}
              ]
            }
          }
        }
      ]
    },
    "DrawingOptionsBaseDTO": {
      "type": "object",
      "discriminator": "Type",
      "description": "Image options base class",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "Rotation"
      ],
      "properties": {
        "Rotation": {
          "description": "Resulting rotation operation",
          "enum": [
            "RotateNoneFlipNone",
            "Rotate90FlipNone",
            "Rotate180FlipNone",
            "Rotate270FlipNone",
            "RotateNoneFlipX",
            "Rotate90FlipX",
            "Rotate180FlipX",
            "Rotate270FlipX",
            "RotateNoneFlipY",
            "Rotate90FlipY",
            "Rotate180FlipY",
            "Rotate270FlipY",
            "RotateNoneFlipXY",
            "Rotate90FlipXY",
            "Rotate180FlipXY",
            "Rotate270FlipXY"
          ],
          "allOf": [
            {}
          ]
        },
        "Layers": {
          "type": "array",
          "description": "Layers to export",
          "items": {
            "type": "string"
          }
        },
        "ResolutionSettings": {
          "description": "DPI resolution settings",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/ResolutionSetting"
        },
        "VectorRasterizationOptions": {
          "description": "Raster options",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/CadRasterizationOptionsDTO"
        }
      }
    },
    "ResolutionSetting": {
      "type": "object",
      "description": "The resolution setting for image save options.",
      "additionalProperties": false,
      "required": [
        "HorizontalResolution",
        "VerticalResolution"
      ],
      "properties": {
        "HorizontalResolution": {
          "type": "number",
          "description": "Gets or sets the horizontal resolution.",
          "format": "double"
        },
        "VerticalResolution": {
          "type": "number",
          "description": "Gets or sets the vertical resolution.",
          "format": "double"
        }
      }
    },
    "CadRasterizationOptionsDTO": {
      "type": "object",
      "description": "Raster export options",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/VectorRasterizationOptionsDTO"
        },
        {
          "type": "object",
          "description": "Raster export options",
          "additionalProperties": false,
          "required": [
            "Zoom",
            "AutomaticLayoutsScaling",
            "DrawType",
            "NoScaling"
          ],
          "properties": {
            "Zoom": {
              "type": "number",
              "description": "Zoom factor",
              "format": "double"
            },
            "PenOptions": {
              "description": "Pen options",
              "allOf": [
                {}
              ],
              "$ref": "#/definitions/PenOptions"
            },
            "AutomaticLayoutsScaling": {
              "type": "boolean",
              "description": "Determines whether layout has to be scaled automatically"
            },
            "Layers": {
              "type": "array",
              "description": "Layers to export",
              "items": {
                "type": "string"
              }
            },
            "Layouts": {
              "type": "array",
              "description": "Layouts to export",
              "items": {
                "type": "string"
              }
            },
            "DrawType": {
              "description": "Drawing mode",
              "enum": [
                "UseDrawColor",
                "UseObjectColor"
              ],
              "allOf": [
                {}
              ]
            },
            "NoScaling": {
              "type": "boolean",
              "description": "Determines whether scaling has to be turned off"
            }
          }
        }
      ]
    },
    "PenOptions": {
      "type": "object",
      "description": "Drawing pen options",
      "additionalProperties": false,
      "required": [
        "StartCap",
        "EndCap"
      ],
      "properties": {
        "StartCap": {
          "description": "Gets or sets the start cap.",
          "enum": [
            "Flat",
            "Square",
            "Round",
            "Triangle",
            "NoAnchor",
            "SquareAnchor",
            "RoundAnchor",
            "DiamondAnchor",
            "ArrowAnchor",
            "AnchorMask",
            "Custom"
          ],
          "allOf": [
            {}
          ]
        },
        "EndCap": {
          "description": "Gets or sets the end cap.",
          "enum": [
            "Flat",
            "Square",
            "Round",
            "Triangle",
            "NoAnchor",
            "SquareAnchor",
            "RoundAnchor",
            "DiamondAnchor",
            "ArrowAnchor",
            "AnchorMask",
            "Custom"
          ],
          "allOf": [
            {}
          ]
        }
      }
    },
    "VectorRasterizationOptionsDTO": {
      "type": "object",
      "discriminator": "Type",
      "description": "Base raster export options class",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "BorderX",
        "BorderY",
        "PageHeight",
        "PageWidth",
        "BackgroundColor",
        "DrawColor",
        "UnitType",
        "ContentAsBitmap"
      ],
      "properties": {
        "BorderX": {
          "type": "number",
          "description": "Gets or sets the border X.",
          "format": "double"
        },
        "BorderY": {
          "type": "number",
          "description": "Gets or sets the border Y.",
          "format": "double"
        },
        "PageHeight": {
          "type": "number",
          "description": "Gets or sets the page height.",
          "format": "double"
        },
        "PageWidth": {
          "type": "number",
          "description": "Gets or sets the page width.",
          "format": "double"
        },
        "BackgroundColor": {
          "description": "Gets or sets a background color.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Color"
        },
        "DrawColor": {
          "description": "Gets or sets a foreground color.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Color"
        },
        "UnitType": {
          "enum": [
            "Kilometer",
            "Meter",
            "Centimenter",
            "Millimeter",
            "Micrometer",
            "Nanometer",
            "Angstrom",
            "Decimeter",
            "Decameter",
            "Hectometer",
            "Gigameter",
            "AstronomicalUnit",
            "LightYear",
            "Parsec",
            "Mile",
            "Yard",
            "Foot",
            "Inch",
            "Mil",
            "MicroInch",
            "Custom",
            "Unitless"
          ]
        },
        "ContentAsBitmap": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether content of a drawing is represented as image inside Pdf. Applicable only for CAD to Pdf export. Default is false."
        },
        "GraphicsOptions": {
          "description": "Gets or sets options to render bitmap inside pdf (if ContentAsBitmap is set to true).",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/GraphicsOptions"
        }
      }
    },
    "Color": {
      "type": "object",
      "description": "The color of the pixel.",
      "additionalProperties": false,
      "required": [
        "R",
        "G",
        "B",
        "A",
        "IsKnownColor",
        "IsEmpty",
        "IsNamedColor"
      ],
      "properties": {
        "R": {
          "type": "integer",
          "description": "Gets the red component value of this Color structure.",
          "format": "byte"
        },
        "G": {
          "type": "integer",
          "description": "Gets the green component value of this Color structure.",
          "format": "byte"
        },
        "B": {
          "type": "integer",
          "description": "Gets the blue component value of this Color structure.",
          "format": "byte"
        },
        "A": {
          "type": "integer",
          "description": "Gets the alpha component value of this Color structure.",
          "format": "byte"
        },
        "IsKnownColor": {
          "type": "boolean",
          "description": "Gets a value indicating whether this Color structure is a predefined color. Predefined colors are represented by the elements of the KnownColor enumeration."
        },
        "IsEmpty": {
          "type": "boolean",
          "description": "Gets a value indicating whether this Color structure is uninitialized."
        },
        "IsNamedColor": {
          "type": "boolean",
          "description": "Gets a value indicating whether this Color structure is a named color or a member of the KnownColor enumeration."
        },
        "Name": {
          "type": "string",
          "description": "Gets the name of this Color."
        }
      }
    },
    "GraphicsOptions": {
      "type": "object",
      "description": "Represents graphics options for embedded bitmap.",
      "additionalProperties": false,
      "required": [
        "TextRenderingHint",
        "SmoothingMode",
        "InterpolationMode"
      ],
      "properties": {
        "TextRenderingHint": {
          "description": "Gets or sets text rendering hint.",
          "enum": [
            "SystemDefault",
            "SingleBitPerPixelGridFit",
            "SingleBitPerPixel",
            "AntiAliasGridFit",
            "AntiAlias",
            "ClearTypeGridFit"
          ],
          "allOf": [
            {}
          ]
        },
        "SmoothingMode": {
          "description": "Gets or sets smoothing mode.",
          "enum": [
            "Default",
            "HighSpeed",
            "HighQuality",
            "None",
            "AntiAlias",
            "Invalid"
          ],
          "allOf": [
            {}
          ]
        },
        "InterpolationMode": {
          "description": "Gets or sets interpolation mode.",
          "enum": [
            "Default",
            "Low",
            "High",
            "Bilinear",
            "Bicubic",
            "NearestNeighbor",
            "HighQualityBilinear",
            "HighQualityBicubic",
            "Invalid"
          ],
          "allOf": [
            {}
          ]
        }
      }
    },
    "GifOptionsDTO": {
      "type": "object",
      "description": "Export options for GIF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for GIF format",
          "additionalProperties": false,
          "required": [
            "DoPaletteCorrection",
            "ColorResolution",
            "IsPaletteSorted",
            "PixelAspectRatio",
            "BackgroundColorIndex",
            "HasTrailer",
            "Interlaced"
          ],
          "properties": {
            "DoPaletteCorrection": {
              "type": "boolean",
              "description": "Determines whether to do auto-correction of a palette"
            },
            "ColorResolution": {
              "type": "integer",
              "description": "Color resolution",
              "format": "byte"
            },
            "IsPaletteSorted": {
              "type": "boolean",
              "description": "Determines whether a palette is sorted"
            },
            "PixelAspectRatio": {
              "type": "integer",
              "description": "Pixel aspect ration",
              "format": "byte"
            },
            "BackgroundColorIndex": {
              "type": "integer",
              "description": "Background color index",
              "format": "byte"
            },
            "HasTrailer": {
              "type": "boolean",
              "description": "Determines whether image has to have a trailer"
            },
            "Interlaced": {
              "type": "boolean",
              "description": "Determines whether an image has to be interlaced"
            }
          }
        }
      ]
    },
    "Jpeg2000OptionsDTO": {
      "type": "object",
      "description": "Export options for JPEG2000 format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for JPEG2000 format",
          "additionalProperties": false,
          "required": [
            "Codec"
          ],
          "properties": {
            "Comments": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "Codec": {
              "enum": [
                "J2K",
                "Jp2",
                "Jpt"
              ]
            }
          }
        }
      ]
    },
    "JpegOptionsDTO": {
      "type": "object",
      "description": "Export options for JPEG format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for JPEG format",
          "additionalProperties": false,
          "required": [
            "CompressionType",
            "ColorType",
            "Quality"
          ],
          "properties": {
            "Comment": {
              "type": "string",
              "description": "Comment to Resulting file"
            },
            "CompressionType": {
              "description": "Compression type",
              "enum": [
                "Baseline",
                "Progressive",
                "Lossless",
                "JpegLs"
              ],
              "allOf": [
                {}
              ]
            },
            "ColorType": {
              "description": "Color type",
              "enum": [
                "Grayscale",
                "YCbCr",
                "Cmyk",
                "Ycck",
                "Rgb"
              ],
              "allOf": [
                {}
              ]
            },
            "Quality": {
              "type": "integer",
              "description": "Quality level",
              "format": "int32"
            },
            "RdOptSettings": {
              "description": "Optimizer settings",
              "allOf": [
                {}
              ],
              "$ref": "#/definitions/RdOptimizerSettings"
            }
          }
        }
      ]
    },
    "RdOptimizerSettings": {
      "type": "object",
      "description": "RD optimizer settings class",
      "additionalProperties": false,
      "required": [
        "BppScale",
        "BppMax",
        "MaxQ",
        "MinQ",
        "MaxPixelValue",
        "PsnrMax",
        "DiscretizedBppMax"
      ],
      "properties": {
        "BppScale": {
          "type": "integer",
          "description": "Gets or sets the BPP (bits per pixel) scale factor.",
          "format": "int32"
        },
        "BppMax": {
          "type": "number",
          "description": "Gets or sets the maximum R value for consideration in  in bits per pixel",
          "format": "double"
        },
        "MaxQ": {
          "type": "integer",
          "description": "Gets or sets the maximum quantization value.",
          "format": "int32"
        },
        "MinQ": {
          "type": "integer",
          "description": "Gets the minimum allowed quantization value.",
          "format": "int32"
        },
        "MaxPixelValue": {
          "type": "integer",
          "description": "Gets the maximum pixel value.",
          "format": "int32"
        },
        "PsnrMax": {
          "type": "integer",
          "description": "Gets the PSNR maximum expected value.",
          "format": "int32"
        },
        "DiscretizedBppMax": {
          "type": "integer",
          "description": "Gets the maximum R value for consideration.",
          "format": "int32"
        }
      }
    },
    "PngOptionsDTO": {
      "type": "object",
      "description": "Export options for PNG format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for PNG format",
          "additionalProperties": false,
          "required": [
            "ColorType",
            "Progressive",
            "FilterType",
            "CompressionLevel",
            "BitDepth"
          ],
          "properties": {
            "ColorType": {
              "description": "Color type",
              "enum": [
                "Grayscale",
                "Truecolor",
                "IndexedColor",
                "GrayscaleWithAlpha",
                "TruecolorWithAlpha"
              ],
              "allOf": [
                {}
              ]
            },
            "Progressive": {
              "type": "boolean",
              "description": "Determines whether 'progressive' method is used"
            },
            "FilterType": {
              "description": "Filter type",
              "enum": [
                "None",
                "Sub",
                "Up",
                "Avg",
                "Paeth",
                "Adaptive"
              ],
              "allOf": [
                {}
              ]
            },
            "CompressionLevel": {
              "type": "integer",
              "description": "Compression level",
              "format": "int32"
            },
            "BitDepth": {
              "type": "integer",
              "description": "Bits depth",
              "format": "byte"
            }
          }
        }
      ]
    },
    "PsdOptionsDTO": {
      "type": "object",
      "description": "Export options for PSD format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for PSD format",
          "additionalProperties": false,
          "required": [
            "Version",
            "CompressionMethod",
            "ColorMode",
            "ChannelBitsCount",
            "ChannelsCount"
          ],
          "properties": {
            "Version": {
              "type": "integer",
              "description": "PSD format version",
              "format": "int32"
            },
            "CompressionMethod": {
              "description": "Compression method",
              "enum": [
                "Raw",
                "RLE",
                "ZipWithoutPrediction",
                "ZipWithPrediction"
              ],
              "allOf": [
                {}
              ]
            },
            "ColorMode": {
              "description": "Color mode",
              "enum": [
                "Bitmap",
                "Grayscale",
                "Indexed",
                "Rgb",
                "Cmyk",
                "Multichannel",
                "Duotone",
                "Lab"
              ],
              "allOf": [
                {}
              ]
            },
            "ChannelBitsCount": {
              "type": "integer",
              "description": "Bits count per channel"
            },
            "ChannelsCount": {
              "type": "integer",
              "description": "Channels count"
            }
          }
        }
      ]
    },
    "TiffOptionsDTO": {
      "type": "object",
      "description": "Export options for TIFF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for TIFF format",
          "additionalProperties": false,
          "required": [
            "ByteOrder",
            "Compression",
            "ExpectedFormat",
            "Photometric"
          ],
          "properties": {
            "ByteOrder": {
              "description": "Bytes order (little/big-endian notation)",
              "enum": [
                "LittleEndian",
                "BigEndian"
              ],
              "allOf": [
                {}
              ]
            },
            "Compression": {
              "description": "Compression level",
              "enum": [
                "None",
                "CcittRle",
                "CcittFax3",
                "CcittFax4",
                "Lzw",
                "Ojpeg",
                "Jpeg",
                "AdobeDeflate",
                "Next",
                "CcittRleW",
                "Packbits",
                "Thunderscan",
                "It8Ctpad",
                "It8Lw",
                "It8Mp",
                "It8Bl",
                "PixarFilm",
                "PixarLog",
                "Deflate",
                "Dcs",
                "Jbig",
                "Sgilog",
                "Sgilog24",
                "Jp2000"
              ],
              "allOf": [
                {}
              ]
            },
            "ExpectedFormat": {
              "description": "Expected TIFF sub-format",
              "enum": [
                "Default",
                "TiffLzwBw",
                "TiffLzwRgb",
                "TiffLzwRgba",
                "TiffLzwCmyk",
                "TiffCcittFax3",
                "TiffCcittFax4",
                "TiffDeflateBw",
                "TiffDeflateRgb",
                "TiffDeflateRgba",
                "TiffCcitRle",
                "TiffJpegRgb",
                "TiffJpegYCbCr",
                "TiffNoCompressionBw",
                "TiffNoCompressionRgb",
                "TiffNoCompressionRgba"
              ],
              "allOf": [
                {}
              ]
            },
            "BitsPerSample": {
              "type": "array",
              "description": "Bits per pixel",
              "items": {
                "type": "integer"
              }
            },
            "Photometric": {
              "description": "Photometric options",
              "enum": [
                "MinIsWhite",
                "MinIsBlack",
                "Rgb",
                "Palette",
                "Mask",
                "Separated",
                "Ycbcr",
                "Cielab",
                "Icclab",
                "Itulab",
                "Logl",
                "Logluv"
              ],
              "allOf": [
                {}
              ]
            }
          }
        }
      ]
    },
    "PdfOptionsDTO": {
      "type": "object",
      "description": "Export options for PDF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for PDF format",
          "additionalProperties": false,
          "properties": {
            "PdfDocumentInfo": {
              "description": "Document metadata",
              "allOf": [
                {}
              ],
              "$ref": "#/definitions/PdfDocumentInfo"
            },
            "CorePdfOptions": {
              "description": "Core PDF rendering options",
              "allOf": [
                {}
              ],
              "$ref": "#/definitions/PdfDocumentOptions"
            }
          }
        }
      ]
    },
    "PdfDocumentInfo": {
      "type": "object",
      "description": "This class represents set of metadata for document description.",
      "additionalProperties": false,
      "properties": {
        "Keywords": {
          "type": "string",
          "description": "Gets or sets keywords of the document."
        },
        "Title": {
          "type": "string",
          "description": "Gets or sets title of the document."
        },
        "Author": {
          "type": "string",
          "description": "Gets or sets author of the document."
        },
        "Subject": {
          "type": "string",
          "description": "Gets or sets subject of the document."
        }
      }
    },
    "PdfDocumentOptions": {
      "type": "object",
      "description": "The PDF options.",
      "additionalProperties": false,
      "required": [
        "Compliance"
      ],
      "properties": {
        "Compliance": {
          "description": "Desired conformance level for generated PDF document.\nImportant note: This option should not be changed after PdfDocument object is constructed.\nDefault is Pdf15.",
          "enum": [
            "Pdf15",
            "PdfA1a",
            "PdfA1b"
          ],
          "allOf": [
            {}
          ]
        }
      }
    },
    "SvgOptionsDTO": {
      "type": "object",
      "description": "Export options for SVG format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for SVG format",
          "additionalProperties": false,
          "required": [
            "ColorType",
            "TextAsShapes"
          ],
          "properties": {
            "ColorType": {
              "description": "Color type",
              "enum": [
                "Grayscale",
                "YCbCr",
                "Cmyk",
                "Ycck",
                "Rgb"
              ],
              "allOf": [
                {}
              ]
            },
            "TextAsShapes": {
              "type": "boolean",
              "description": "Render text as shapes"
            }
          }
        }
      ]
    },
    "WmfOptionsDTO": {
      "type": "object",
      "description": "Export options for WMF format",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/DrawingOptionsBaseDTO"
        },
        {
          "type": "object",
          "description": "Export options for WMF format",
          "additionalProperties": false,
          "required": [
            "BitsPerPixel"
          ],
          "properties": {
            "BitsPerPixel": {
              "type": "integer",
              "description": "Bits per pixel for Resulting file",
              "format": "int32"
            }
          }
        }
      ]
    },
    "CadResponse": {
      "type": "object",
      "description": "Represents information about a drawing.",
      "additionalProperties": false,
      "required": [
        "Height",
        "Width"
      ],
      "properties": {
        "Height": {
          "type": "integer",
          "description": "Gets or sets the height of a drawing.",
          "format": "int32"
        },
        "Width": {
          "type": "integer",
          "description": "Gets or sets the width of a drawing.",
          "format": "int32"
        },
        "DwgProperties": {
          "description": "Gets or sets the DWG properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DwgProperties"
        },
        "DxfProperties": {
          "description": "Gets or sets the DXF properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DxfProperties"
        },
        "DwtProperties": {
          "description": "Gets or sets the DWT properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DwgProperties"
        },
        "DgnProperties": {
          "description": "Gets or sets the DGN properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DgnProperties"
        },
        "IfcProperties": {
          "description": "Gets or sets the IFC properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/IfcProperties"
        },
        "IgsProperties": {
          "description": "Gets or sets the IGS properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/IgsProperties"
        },
        "StlProperties": {
          "description": "Gets or sets the STL properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/StlProperties"
        },
        "DwfProperties": {
          "description": "Gets or sets the DWF properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/DwfProperties"
        },
        "Cff2Properties": {
          "description": "Gets or sets the CFF2 properties.",
          "allOf": [
            {}
          ],
          "$ref": "#/definitions/Cff2Properties"
        }
      }
    },
    "DwgProperties": {
      "type": "object",
      "description": "Represents information about DWG drawing.",
      "additionalProperties": false
    },
    "DxfProperties": {
      "type": "object",
      "description": "Represents information about DXF drawing.",
      "additionalProperties": false
    },
    "DgnProperties": {
      "type": "object",
      "description": "Represents information about DGN drawing.",
      "additionalProperties": false
    },
    "IfcProperties": {
      "type": "object",
      "description": "Represents information about IFC drawing.",
      "additionalProperties": false
    },
    "IgsProperties": {
      "type": "object",
      "description": "Represents information about IGS drawing.",
      "additionalProperties": false
    },
    "StlProperties": {
      "type": "object",
      "description": "Represents information about STL drawing.",
      "additionalProperties": false
    },
    "DwfProperties": {
      "type": "object",
      "description": "Represents information about DWF drawing.",
      "additionalProperties": false
    },
    "Cff2Properties": {
      "type": "object",
      "description": "Represents information about CFF2 drawing.",
      "additionalProperties": false
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://api-qa.aspose.cloud/connect/token"
    }
  }
}